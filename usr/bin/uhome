#!/bin/sh

PKG="uhome"

FILE="/etc/$PKG/addresses"
TRIES=10
QUIET=0
while read DEV x x x x x x mask x x x; do
	[ "$mask" = "00000000" ] && break
done < /proc/net/route
while [ ! -z "$1" ]; do
	case "${1}" in
		-d|--dev)
			DEV="$2"
			shift 2
		;;
		-f|--file)
			FILE="$2"
			shift 2
		;;
		-q|--quiet)
			QUIET="1"
			shift 1
		;;
		-t|--tries)
			TRIES="$2"
			shift 2
		;;
		*)
			echo "Unknown options [$1]" 1>&2
			exit 1
		;;
	esac
done


is_ip() {
	echo "$1" | grep -qs "^[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}$" >/dev/null 2>&1
}

is_mac() {
	echo "$1" | grep -qs "^[0-9a-fA-F]\{2\}:[0-9a-fA-F]\{2\}:[0-9a-fA-F]\{2\}:[0-9a-fA-F]\{2\}:[0-9a-fA-F]\{2\}:[0-9a-fA-F]\{2\}$" >/dev/null 2>&1
}

test_addr() {
	local addr="$1"
	local i=0
	local ip=0
	local mac=0
	if is_ip "$addr"; then
		ip=1
	elif is_mac "$addr"; then
		mac=1
	else
		echo "ERROR: Invalid address in configuration file [$addr]" 1>&2
		exit 1
	fi
	for i in $(seq 1 $TRIES); do
		if [ "$ip" = "1" ]; then
			ping -q -c 1 "$addr" >/dev/null 2>&1 && return
		elif [ "$mac" = "1" ]; then
			ip=$(arp -an | grep " at $addr " | sed -e "s/^.*(//" -e "s/).*$"//)
			arping -q -c 1 -I "$NETWORK_DEVICE" "$ip" >/dev/null 2>&1 && return
		fi
	done
	false
}

for addr in $(cat "$FILE" | grep -v "^#"); do
	if test_addr "$addr"; then
		echo "$PKG:  Yep!"
		exit 0
	fi
done
echo "$PKG:  Nope!"
exit 1
