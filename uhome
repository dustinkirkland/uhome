#!/bin/sh

PKG="uhome"
DELAY=300
ADDR_FILE="$1"
MAX_TRIES=10
NETWORK_DEVICE=
while read network_device x x x x x x mask x x x; do
	[ "$mask" = "00000000" ] && break
done < /proc/net/route


is_ip() {
	echo "$1" | grep -qs "^[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}$" >/dev/null 2>&1
}

is_mac() {
	echo "$1" | grep -qs "^[0-9a-fA-F]\{2\}:[0-9a-fA-F]\{2\}:[0-9a-fA-F]\{2\}:[0-9a-fA-F]\{2\}:[0-9a-fA-F]\{2\}:[0-9a-fA-F]\{2\}$" >/dev/null 2>&1
}

test_addr() {
	local addr="$1"
	local i=0
	local ip=0
	local mac=0
	if is_ip "$addr"; then
		ip=1
	elif is_mac "$addr"; then
		mac=1
	else
		echo "ERROR: Invalid address in configuration file [$addr]" 1>&2
		exit 1
	fi
	for i in $(seq 1 $MAX_TRIES); do
		if [ "$ip" = "1" ]; then
			ping -q -c 1 "$addr" >/dev/null 2>&1 && return
		elif [ "$mac" = "1" ]; then
			ip=$(arp -an | grep " at $addr " | sed -e "s/^.*(//" -e "s/).*$"//)
			arping -q -c 1 -I "$NETWORK_DEVICE" "$ip" >/dev/null 2>&1 && return
		fi
	done
	false
}

set_home() {
	home="$1"
}

home=0
for addr in $(cat "$ADDR_FILE"); do
	if test_addr "$addr"; then
		set_home "1"
		echo "=== YOURE AT HOME! ==="
		sleep $DELAY
		continue
	fi
done
[ "$home" = "0" ] && set_home "0"
exit "$home"

